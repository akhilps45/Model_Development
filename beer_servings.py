# -*- coding: utf-8 -*-
"""Beer_servings.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H-6pGNTne1mnvsk-A70IvwHV99mdXjsW
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import OneHotEncoder
from sklearn.metrics import mean_squared_error, r2_score
import pickle
import os
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder, StandardScaler

df = pd.read_csv('/content/beer-servings.csv')
df.head(5)

df = df.drop_duplicates()        # Drop duplicate rows
df = df.dropna()

# 3. Outlier clipping (IQR method for numeric columns)
numeric_cols = df.select_dtypes(include=["number"]).columns

for col in numeric_cols:
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    lower = Q1 - 1.5 * IQR
    upper = Q3 + 1.5 * IQR
    df[col] = df[col].clip(lower, upper)

# 4. Preprocessing pipeline
X = df.drop("beer_servings", axis=1)
y = df["beer_servings"]

# 5. Separate categorical & numeric features
categorical = X.select_dtypes(include=["object"]).columns.tolist()
numeric = X.select_dtypes(exclude=["object"]).columns.tolist()

# 6. Preprocessing pipeline
preprocessor = ColumnTransformer(
    transformers=[
        ("num", StandardScaler(), numeric),
        ("cat", OneHotEncoder(handle_unknown="ignore"), categorical)
    ]
)

# 7. Full pipeline (preprocessing + model)
model = Pipeline(steps=[
    ("preprocessor", preprocessor),
    ("regressor", RandomForestRegressor(random_state=42))
])

# 8. Train-test split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

model.fit(X_train, y_train)

# 10. Evaluate
print("Train R2:", model.score(X_train, y_train))
print("Test R2:", model.score(X_test, y_test))

with open("beer_servings_pipeline.pkl", "wb") as f:
    pickle.dump(model, f)

print("âœ… Data cleaned (duplicates, nulls, outliers), model trained, pipeline saved!")

pip show scikit-learn